---
import BaseLayout from "../layouts/BaseLayout.astro";
import TypeWriter from "../components/TypeWriter.tsx";
import GameCanvas from "../game/GameCanvas.tsx";
---

<BaseLayout title="Game | My Portfolio">
  <section class="py-12 max-w-4xl mx-auto">
    <div data-scroll class="opacity-0">
      <h1 class="text-3xl md:text-4xl font-bold text-center mb-6 min-h-[3.5rem]">
        <TypeWriter 
          client:load 
          text="90's‐Style 2D Game" 
          speed={100} 
          delay={300}
        />
      </h1>
      <div class="w-24 h-1 bg-primary-accent mx-auto mb-6"></div>
    </div>
    
    <!-- Development Notice Banner -->
    <div data-scroll data-scroll-delay="0.05" class="opacity-0 bg-red-900/80 border border-red-500 text-white rounded-lg p-4 mb-6 shadow-lg flex items-center">
      <div class="flex-shrink-0 mr-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
        </svg>
      </div>
      <div>
        <p class="font-medium mb-1">Development In Progress</p>
        <p class="text-sm text-red-100/90">This game is still under active development. Expect bugs, incomplete features, and gameplay adjustments.</p>
      </div>
    </div>
    
    <div data-scroll data-scroll-delay="0.1" class="opacity-0 bg-base-200 p-4 rounded-xl shadow-lg mb-6">
      <GameCanvas client:only="react" />
    </div>
    
    <div data-scroll data-scroll-delay="0.2" class="opacity-0 text-center mt-6">
      <p class="mb-4">Use the arrow keys to control the game.</p>
      <p class="text-secondary-accent font-medium">More game features coming soon!</p>
    </div>
  </section>

  <script>
    // Scroll animations for elements with data-scroll attribute
    document.addEventListener('DOMContentLoaded', () => {
      const scrollElements = document.querySelectorAll('[data-scroll]');
      
      const elementInView = (el, scrollOffset = 0) => {
        const elementTop = el.getBoundingClientRect().top;
        return (
          elementTop <= 
          (window.innerHeight || document.documentElement.clientHeight) * 0.8
        );
      };
      
      const displayScrollElement = (element) => {
        const delay = element.dataset.scrollDelay || 0;
        setTimeout(() => {
          element.classList.add('motion-safe:animate-fadeIn');
          element.style.opacity = 1;
          element.style.transform = 'translateY(0)';
        }, delay * 1000);
      };
      
      const hideScrollElement = (element) => {
        element.style.opacity = 0;
        element.style.transform = 'translateY(20px)';
      };
      
      const handleScrollAnimation = () => {
        scrollElements.forEach((el) => {
          if (elementInView(el, 100)) {
            displayScrollElement(el);
          } else {
            hideScrollElement(el);
          }
        });
      };
      
      // Add smooth transition for scroll elements
      scrollElements.forEach(el => {
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
      });
      
      window.addEventListener('scroll', () => {
        handleScrollAnimation();
      });
      
      // Initial check
      handleScrollAnimation();
    });
  </script>
</BaseLayout>

<style>
  [data-scroll] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
</style>